type ClassMember @model @auth(rules: [{allow: public}]) {
  id: ID!
  classID: ID! @index(name: "byClass")
  userID: ID! @index(name: "byUser")
  role: RoleEnum
}

type Class @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  ClassMembers: [ClassMember] @hasMany(indexName: "byClass", fields: ["id"])
}

type Like @model @auth(rules: [{allow: public}]) {
  id: ID!
  authorId: ID! @index(name: "byUser")
  postID: ID! @index(name: "byPost")
}

type Comment @model @auth(rules: [{allow: public}]) {
  id: ID!
  postId: ID! @index(name: "byPost")
  authorId: ID! @index(name: "byUser")
  description: String
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type Message @model @auth(rules: [{allow: public}]) {
  id: ID!
  authorId: ID! @index(name: "byUser")
  receiverId: ID!
  content: String!
  createdAt: AWSDateTime
}

type Post @model @auth(rules: [{allow: public}]) {
  id: ID!
  authorId: ID! @index(name: "byUser")
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
  description: String!
  mediaUrl: String
  Comments: [Comment] @hasMany(indexName: "byPost", fields: ["id"])
  Likes: [Like] @hasMany(indexName: "byPost", fields: ["id"])
}

enum RoleEnum {
  MANAGER
  STUDENT
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  firstName: String
  lastName: String
  birthday: String
  avatarUrl: String
  Posts: [Post] @hasMany(indexName: "byUser", fields: ["id"])
  Messages: [Message] @hasMany(indexName: "byUser", fields: ["id"])
  Comments: [Comment] @hasMany(indexName: "byUser", fields: ["id"])
  Likes: [Like] @hasMany(indexName: "byUser", fields: ["id"])
  email: String
  phoneNumber: String
  ClassMembers: [ClassMember] @hasMany(indexName: "byUser", fields: ["id"])
}
 