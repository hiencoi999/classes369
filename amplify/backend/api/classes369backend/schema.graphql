type ClassMember @model @auth(rules: [{allow: public}]) {
  id: ID!
  classId: ID! @index(name: "byClass")
  userId: ID! @index(name: "byMemberByUser")
  class: Class @belongsTo(fields: ["classId"])
  user: User @belongsTo(fields: ["userId"])
}

type Class @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  ownerId: ID! @index(name: "byClassByUser")
  ClassMembers: [ClassMember] @hasMany(indexName: "byClass", fields: ["id"])
  Posts: [Post] @hasMany(indexName: "byPostByClass", fields: ["id"])
}

type Post @model @auth(rules: [{allow: public}]) {
  id: ID!
  authorId: ID! @index(name: "byUser")
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
  description: String!
  classId: ID! @index(name: "byPostByClass")
  title: String
  deadline: AWSDateTime
  author: User @belongsTo(fields: ["authorId"])
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  firstName: String
  lastName: String
  birthday: String
  avatarUrl: String
  email: String
  phoneNumber: String
  Posts: [Post] @hasMany(indexName: "byUser", fields: ["id"])
  Classes: [Class] @hasMany(indexName: "byClassByUser", fields: ["id"])
  ClassMembers: [ClassMember] @hasMany(indexName: "byMemberByUser", fields: ["id"])
}

type ClassInvitation @model @auth(rules: [{allow: public}]) {
  id: ID!
  classInviteId: ID! @index(name: "byClass")
  targetEmail: String
  hostEmail: String
  nameOfClass: String
}